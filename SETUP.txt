## MarkBot Setup

Raspberry Pi 2 Model B
http://www.amazon.com/gp/product/B00MV6TAJI

1. Follow instructions in Quick Start Guide to insert SD card, connect USB
mouse and keyboard, connect HDMI monitor, and, lastly, connect the power
supply. After the device starts up, set up Raspbian operating system using
NOOBS (New Out of Box Software). Install just the Raspian operating the
system (the recommended setup).

Note: During one setup, the SD card was not showing any available space when
inserted on the Raspberry Pi, which meant I couldn't install the Raspbian
software via NOOBS. I used the adapter that came with the SD card to insert
the card into my MacBook Pro. I opened the Mac OS X Disk Tools application and
ran the Verify and Repair tools on the SD card. I then reinserted the SD card
into the Raspberry Pi and this time it showed available space and installation
could proceed.

2. Use the raspi-config tool to do the following:

- Enable Boot to Desktop/Scratch: Desktop Log in
- Internationalisation Options: Change Locale: en_US.UTF-8 UTF-8
- Internationalisation Options: Change Timezone: US: Pacific Ocean
- Internationalisation Options: Change Keyboard Layout: (*US* Keyboard)
- Enable Camera: Enable

Note: If you're getting unexpected characters when typing, check keyboard
Internationalisation Options for Keyboard Layout above.

https://www.raspberrypi.org/forums/viewtopic.php?f=26&t=11544

3. To set up Wifi, shut down the Raspberry Pi, insert the USB Wifi adapter, and
restart the Raspberry Pi. Then:

Left-click the screen icons in the upper right, select your Wifi network, and
enter your Wifi password.

4. Install Node.js v0.10.40 on the Raspberry Pi:

cd /usr/src
sudo wget https://nodejs.org/dist/v0.10.40/node-v0.10.40.tar.gz
sudo tar -zxvf node-v0.10.40.tar.gz
cd node-v0.10.40/
sudo ./configure

(The following takes a long time, an hour or more)

sudo make
sudo make install

Confirm node works:

node -v

Should return:

v0.10.40

5. Clone MarkBots GitHub project onto Raspberry Pi:

git clone https://github.com/wooldridge/markbots

6. Set up the Raspberry Pi camera:

https://www.raspberrypi.org/documentation/configuration/camera.md

Plug in the camera with the blue stripe toward Ethernet port.

Run the following as suggested (took at least 15 minutes):

sudo apt-get update
sudo apt-get upgrade

To test, run:

raspistill -v -o test.jpg

(Will save an image to the current directory)

7. Set up the GPS receiver:

Plug in the USB-to-TTL serial cable:

http://www.amazon.com/gp/product/B00QT7LQ88
http://www.adafruit.com/products/954

https://learn.adafruit.com/adafruit-ultimate-gps-on-the-raspberry-pi/setting-everything-up

Connect cable wires to GPS device:

Red   -> VIN
Black -> Grd
Green -> Rx
White -> Tx

Plug the cable into one of the Raspberry Pi's USB ports.

Set up software:

sudo apt-get install gpsd gpsd-clients python-gps
sudo gpsd /dev/ttyUSB0 -F /var/run/gpsd.sock

To test:

cgps -s

8. Set up PIR motion sensor

https://www.raspberrypi.org/learning/parent-detector/worksheet/

Gnd ->  Black -> left
GPIO pin 4 -> White -> middle
5V pin -> Red -> right

9. Install Node.js dependencies. From the markbots directory:

sudo npm install --production

(Takes a while, 15 minutes. Use --production to not install dev dependencies, 
i.e. grunt, which are there for dashboard development.)

NOTE: Had problems installing raspi-io in the past. Possible solutions include:

Install globally:

sudo npm -g install raspi-io --unsafe-perms

To fix install issues with raspi-io, change perms as described here (option 1):

https://docs.npmjs.com/getting-started/fixing-npm-permissions

Install locally on RPi, separate from other installs:

sudo npm install raspi-io

During one setup, experienced error during raspi-io install, had to reboot,
worked after that

10. Test the MarkBot

cd markbots
sudo node capture

Extra: Tether Bot to iPhone
 
http://www.daveconroy.com/how-to-tether-your-raspberry-pi-with-your-iphone-5/

Note: Experience shows these steps can conflict with normal WiFi working
correctly. If this happens, may need to edit /etc/network/interfaces to fix.

Install the following:

sudo apt-get install gvfs ipheth-utils
sudo apt-get install libimobiledevice-utils gvfs-backends gvfs-bin gvfs-fuse

Edit the following:

sudo nano /etc/network/interfaces

to add:

allow-hotplug eth1
iface eth1 inet dhcp

Confirm before and after tethering with:

ifconfig -s

I was successful tethering with GUI, starting capture, and then disconnecting
monitor, kyboard, and mouse. I could successfully connect to the demo server
via the iPhone (without Wifi).
